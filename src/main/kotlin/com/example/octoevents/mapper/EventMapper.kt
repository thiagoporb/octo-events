//package com.example.octoevents.mapper
//
//import com.example.octoevents.domain.*
//import com.example.octoevents.web.dto.*
//
//
//fun toDomain(dto: EventDTO): IssuesEvent {
//    return IssuesEvent(
//        id = dto.id,
//        ref = dto.ref,
//        before = dto.before,
//        after = dto.after,
//        repository = Repository(
//            id = dto.repository!!.id,
//            nodeId = dto.repository?.nodeId,
//            name = dto.repository?.name,
//            fullName = dto.repository?.fullName,
//            _private = dto.repository?.private,
//            owner = Owner(
//                name = dto.repository?.owner?.name,
//                email = dto.repository?.owner?.email,
//                login = dto.repository?.owner?.login,
//                id = dto.repository?.owner?.id!!,
//                nodeId = dto.repository?.owner?.nodeId,
//                avatarUrl = dto.repository?.owner?.avatarUrl,
//                gravatarId = dto.repository?.owner?.gravatarId,
//                url = dto.repository?.owner?.url,
//                htmlUrl = dto.repository?.owner?.htmlUrl,
//                followersUrl = dto.repository?.owner?.followersUrl,
//                followingUrl = dto.repository?.owner?.followingUrl,
//                gistsUrl = dto.repository?.owner?.gistsUrl,
//                starredUrl = dto.repository?.owner?.starredUrl,
//                subscriptionsUrl = dto.repository?.owner?.subscriptionsUrl,
//                organizationsUrl = dto.repository?.owner?.organizationsUrl,
//                reposUrl = dto.repository?.owner?.reposUrl,
//                eventsUrl = dto.repository?.owner?.eventsUrl,
//                receivedEventsUrl = dto.repository?.owner?.receivedEventsUrl,
//                type = dto.repository?.owner?.type,
//                siteAdmin = dto.repository?.owner?.siteAdmin
//            ),
//            htmlUrl = dto.repository!!.htmlUrl,
//            description = dto.repository!!.description,
//            fork = dto.repository!!.fork,
//            url = dto.repository?.url,
//            forksUrl = dto.repository?.forksUrl,
//            keysUrl = dto.repository?.keysUrl,
//            collaboratorsUrl = dto.repository?.collaboratorsUrl,
//            teamsUrl = dto.repository?.teamsUrl,
//            hooksUrl = dto.repository?.hooksUrl,
//            issueEventsUrl = dto.repository?.issueEventsUrl,
//            eventsUrl = dto.repository?.eventsUrl,
//            assigneesUrl = dto.repository?.assigneesUrl,
//            branchesUrl = dto.repository?.branchesUrl,
//            tagsUrl = dto.repository?.tagsUrl,
//            blobsUrl = dto.repository?.blobsUrl,
//            gitTagsUrl = dto.repository?.gitTagsUrl,
//            gitRefsUrl = dto.repository?.gitRefsUrl,
//            treesUrl = dto.repository?.treesUrl,
//            statusesUrl = dto.repository?.statusesUrl,
//            languagesUrl = dto.repository?.languagesUrl,
//            stargazersUrl = dto.repository?.stargazersUrl,
//            contributorsUrl = dto.repository?.contributorsUrl,
//            subscribersUrl = dto.repository?.subscribersUrl,
//            subscriptionUrl = dto.repository?.subscriptionUrl,
//            commitsUrl = dto.repository?.commitsUrl,
//            gitCommitsUrl = dto.repository?.gitCommitsUrl,
//            commentsUrl = dto.repository?.commentsUrl,
//            issueCommentUrl = dto.repository?.issueCommentUrl,
//            contentsUrl = dto.repository?.contentsUrl,
//            compareUrl = dto.repository?.compareUrl,
//            mergesUrl = dto.repository?.mergesUrl,
//            archiveUrl = dto.repository?.archiveUrl,
//            downloadsUrl = dto.repository?.downloadsUrl,
//            issuesUrl = dto.repository?.issuesUrl,
//            pullsUrl = dto.repository?.pullsUrl,
//            milestonesUrl = dto.repository?.milestonesUrl,
//            notificationsUrl = dto.repository?.notificationsUrl,
//            labelsUrl = dto.repository?.labelsUrl,
//            releasesUrl = dto.repository?.releasesUrl,
//            deploymentsUrl = dto.repository?.deploymentsUrl,
//            createdAt = dto.repository?.createdAt,
//            updatedAt = dto.repository?.updatedAt,
//            pushedAt = dto.repository?.pushedAt,
//            gitUrl = dto.repository?.gitUrl,
//            sshUrl = dto.repository?.sshUrl,
//            cloneUrl = dto.repository?.cloneUrl,
//            svnUrl = dto.repository?.svnUrl,
//            homepage = dto.repository?.homepage,
//            size = dto.repository?.size,
//            stargazersCount = dto.repository?.stargazersCount,
//            watchersCount = dto.repository?.watchersCount,
//            language = dto.repository?.language,
//            hasIssues = dto.repository?.hasIssues,
//            hasProjects = dto.repository?.hasProjects,
//            hasDownloads = dto.repository?.hasDownloads,
//            hasWiki = dto.repository?.hasWiki,
//            hasPages = dto.repository?.hasPages,
//            forksCount = dto.repository?.forksCount,
//            mirrorUrl = dto.repository?.mirrorUrl,
//            archived = dto.repository?.archived,
//            disabled = dto.repository?.disabled,
//            openIssuesCount = dto.repository?.openIssuesCount,
//            license = License(
//                key = dto.repository?.license?.key,
//                name = dto.repository?.license?.name,
//                spdxId = dto.repository?.license?.spdxId,
//                url = dto.repository?.license?.url,
//                nodeId = dto.repository?.license?.nodeId
//            ),
//            forks = dto.repository?.forks,
//            openIssues = dto.repository?.openIssues,
//            watchers = dto.repository?.watchers,
//            defaultBranch = dto.repository?.defaultBranch,
//            stargazers = dto.repository?.stargazers,
//            masterBranch = dto.repository?.masterBranch
//        ),
//        pusher = Pusher(
//            name = dto.pusher?.name,
//            email = dto.pusher?.email
//        ),
//        sender = Sender(
//            id = dto.sender?.id!!,
//            login = dto.sender?.login,
//            nodeId = dto.sender?.nodeId,
//            avatarUrl = dto.sender?.avatarUrl,
//            gravatarId = dto.sender?.gravatarId,
//            url = dto.sender?.url,
//            htmlUrl = dto.sender?.htmlUrl,
//            followersUrl = dto.sender?.followersUrl,
//            followingUrl = dto.sender?.followingUrl,
//            gistsUrl = dto.sender?.gistsUrl,
//            starredUrl = dto.sender?.starredUrl,
//            subscriptionsUrl = dto.sender?.subscriptionsUrl,
//            organizationsUrl = dto.sender?.organizationsUrl,
//            reposUrl = dto.sender?.reposUrl,
//            eventsUrl = dto.sender?.eventsUrl,
//            receivedEventsUrl = dto.sender?.receivedEventsUrl,
//            type = dto.sender?.type,
//            siteAdmin = dto.sender?.siteAdmin
//        ),
//        created = dto.created,
//        deleted = dto.deleted,
//        forced = dto.forced,
//        baseRef = dto.baseRef,
//        compare = dto.compare,
//        commits = dto.commits?.map {
//            Commit(
//                id = it.id!!,
//                treeId = it.treeId,
//                distinct = it.distinct,
//                message = it.message,
//                timestamp = it.timestamp,
//                url = it.url,
//                author = Author(it.author?.name, it.author?.email, it.author?.username!!),
//                committer = Committer(it.committer?.name, it.committer?.email, it.committer?.username!!),
//                added = it.added,
//                removed = it.removed,
//                modified = it.modified
//            )
//        }?.toMutableList(),
//        headCommit = HeadCommit(
//            id = dto.headCommit?.id,
//            treeId = dto.headCommit?.treeId,
//            distinct = dto.headCommit?.distinct,
//            message = dto.headCommit?.message,
//            timestamp = dto.headCommit?.timestamp,
//            url = dto.headCommit?.url,
//            author = Author(
//                name = dto.headCommit?.author?.name,
//                email = dto.headCommit?.author?.email,
//                username = dto.headCommit?.author?.username!!
//            ),
//            committer = Committer(
//                name = dto.headCommit?.committer?.name,
//                email = dto.headCommit?.committer?.email,
//                username = dto.headCommit?.committer?.username!!
//            ),
//            added = dto.headCommit?.added,
//            removed = dto.headCommit?.removed,
//            modified = dto.headCommit?.modified,
//        )
//
//    )
//}
//
//fun toDto(domain: IssuesEvent): EventDTO {
//    return EventDTO(
//        id = domain.id,
//        ref = domain.ref,
//        before = domain.before,
//        after = domain.after,
//        repository = RepositoryDTO(
//            id = domain.repository!!.id,
//            nodeId = domain.repository?.nodeId,
//            name = domain.repository?.name,
//            fullName = domain.repository?.fullName,
//            private = domain.repository?._private,
//            owner = OwnerDTO(
//                name = domain.repository?.owner?.name,
//                email = domain.repository?.owner?.email,
//                login = domain.repository?.owner?.login,
//                id = domain.repository?.owner?.id!!,
//                nodeId = domain.repository?.owner?.nodeId,
//                avatarUrl = domain.repository?.owner?.avatarUrl,
//                gravatarId = domain.repository?.owner?.gravatarId,
//                url = domain.repository?.owner?.url,
//                htmlUrl = domain.repository?.owner?.htmlUrl,
//                followersUrl = domain.repository?.owner?.followersUrl,
//                followingUrl = domain.repository?.owner?.followingUrl,
//                gistsUrl = domain.repository?.owner?.gistsUrl,
//                starredUrl = domain.repository?.owner?.starredUrl,
//                subscriptionsUrl = domain.repository?.owner?.subscriptionsUrl,
//                organizationsUrl = domain.repository?.owner?.organizationsUrl,
//                reposUrl = domain.repository?.owner?.reposUrl,
//                eventsUrl = domain.repository?.owner?.eventsUrl,
//                receivedEventsUrl = domain.repository?.owner?.receivedEventsUrl,
//                type = domain.repository?.owner?.type,
//                siteAdmin = domain.repository?.owner?.siteAdmin
//            ),
//            htmlUrl = domain.repository!!.htmlUrl,
//            description = domain.repository!!.description,
//            fork = domain.repository!!.fork,
//            url = domain.repository?.url,
//            forksUrl = domain.repository?.forksUrl,
//            keysUrl = domain.repository?.keysUrl,
//            collaboratorsUrl = domain.repository?.collaboratorsUrl,
//            teamsUrl = domain.repository?.teamsUrl,
//            hooksUrl = domain.repository?.hooksUrl,
//            issueEventsUrl = domain.repository?.issueEventsUrl,
//            eventsUrl = domain.repository?.eventsUrl,
//            assigneesUrl = domain.repository?.assigneesUrl,
//            branchesUrl = domain.repository?.branchesUrl,
//            tagsUrl = domain.repository?.tagsUrl,
//            blobsUrl = domain.repository?.blobsUrl,
//            gitTagsUrl = domain.repository?.gitTagsUrl,
//            gitRefsUrl = domain.repository?.gitRefsUrl,
//            treesUrl = domain.repository?.treesUrl,
//            statusesUrl = domain.repository?.statusesUrl,
//            languagesUrl = domain.repository?.languagesUrl,
//            stargazersUrl = domain.repository?.stargazersUrl,
//            contributorsUrl = domain.repository?.contributorsUrl,
//            subscribersUrl = domain.repository?.subscribersUrl,
//            subscriptionUrl = domain.repository?.subscriptionUrl,
//            commitsUrl = domain.repository?.commitsUrl,
//            gitCommitsUrl = domain.repository?.gitCommitsUrl,
//            commentsUrl = domain.repository?.commentsUrl,
//            issueCommentUrl = domain.repository?.issueCommentUrl,
//            contentsUrl = domain.repository?.contentsUrl,
//            compareUrl = domain.repository?.compareUrl,
//            mergesUrl = domain.repository?.mergesUrl,
//            archiveUrl = domain.repository?.archiveUrl,
//            downloadsUrl = domain.repository?.downloadsUrl,
//            issuesUrl = domain.repository?.issuesUrl,
//            pullsUrl = domain.repository?.pullsUrl,
//            milestonesUrl = domain.repository?.milestonesUrl,
//            notificationsUrl = domain.repository?.notificationsUrl,
//            labelsUrl = domain.repository?.labelsUrl,
//            releasesUrl = domain.repository?.releasesUrl,
//            deploymentsUrl = domain.repository?.deploymentsUrl,
//            createdAt = domain.repository?.createdAt,
//            updatedAt = domain.repository?.updatedAt,
//            pushedAt = domain.repository?.pushedAt,
//            gitUrl = domain.repository?.gitUrl,
//            sshUrl = domain.repository?.sshUrl,
//            cloneUrl = domain.repository?.cloneUrl,
//            svnUrl = domain.repository?.svnUrl,
//            homepage = domain.repository?.homepage,
//            size = domain.repository?.size,
//            stargazersCount = domain.repository?.stargazersCount,
//            watchersCount = domain.repository?.watchersCount,
//            language = domain.repository?.language,
//            hasIssues = domain.repository?.hasIssues,
//            hasProjects = domain.repository?.hasProjects,
//            hasDownloads = domain.repository?.hasDownloads,
//            hasWiki = domain.repository?.hasWiki,
//            hasPages = domain.repository?.hasPages,
//            forksCount = domain.repository?.forksCount,
//            mirrorUrl = domain.repository?.mirrorUrl,
//            archived = domain.repository?.archived,
//            disabled = domain.repository?.disabled,
//            openIssuesCount = domain.repository?.openIssuesCount,
//            license = LicenseDTO(
//                key = domain.repository?.license?.key,
//                name = domain.repository?.license?.name,
//                spdxId = domain.repository?.license?.spdxId,
//                url = domain.repository?.license?.url,
//                nodeId = domain.repository?.license?.nodeId
//            ),
//            forks = domain.repository?.forks,
//            openIssues = domain.repository?.openIssues,
//            watchers = domain.repository?.watchers,
//            defaultBranch = domain.repository?.defaultBranch,
//            stargazers = domain.repository?.stargazers,
//            masterBranch = domain.repository?.masterBranch
//        ),
//        pusher = PusherDTO(
//            name = domain.pusher?.name,
//            email = domain.pusher?.email
//        ),
//        sender = SenderDTO(
//            id = domain.sender?.id!!,
//            login = domain.sender?.login,
//            nodeId = domain.sender?.nodeId,
//            avatarUrl = domain.sender?.avatarUrl,
//            gravatarId = domain.sender?.gravatarId,
//            url = domain.sender?.url,
//            htmlUrl = domain.sender?.htmlUrl,
//            followersUrl = domain.sender?.followersUrl,
//            followingUrl = domain.sender?.followingUrl,
//            gistsUrl = domain.sender?.gistsUrl,
//            starredUrl = domain.sender?.starredUrl,
//            subscriptionsUrl = domain.sender?.subscriptionsUrl,
//            organizationsUrl = domain.sender?.organizationsUrl,
//            reposUrl = domain.sender?.reposUrl,
//            eventsUrl = domain.sender?.eventsUrl,
//            receivedEventsUrl = domain.sender?.receivedEventsUrl,
//            type = domain.sender?.type,
//            siteAdmin = domain.sender?.siteAdmin
//        ),
//        created = domain.created,
//        deleted = domain.deleted,
//        forced = domain.forced,
//        baseRef = domain.baseRef,
//        compare = domain.compare,
//        commits = domain.commits?.map {
//            CommitDTO(
//                id = it.id,
//                treeId = it.treeId,
//                distinct = it.distinct,
//                message = it.message,
//                timestamp = it.timestamp,
//                url = it.url,
//                author = AuthorDTO(it.author?.name, it.author?.email, it.author?.username),
//                committer = CommitterDTO(it.committer?.name, it.committer?.email, it.committer?.username),
//                added = it.added,
//                removed = it.removed,
//                modified = it.modified
//            )
//        }?.toMutableList(),
//        headCommit = HeadCommitDTO(
//            id = domain.headCommit?.id,
//            treeId = domain.headCommit?.treeId,
//            distinct = domain.headCommit?.distinct,
//            message = domain.headCommit?.message,
//            timestamp = domain.headCommit?.timestamp,
//            url = domain.headCommit?.url,
//            author = AuthorDTO(
//                name = domain.headCommit?.author?.name,
//                email = domain.headCommit?.author?.email,
//                username = domain.headCommit?.author?.username
//            ),
//            committer = CommitterDTO(
//                name = domain.headCommit?.committer?.name,
//                email = domain.headCommit?.committer?.email,
//                username = domain.headCommit?.committer?.username
//            ),
//            added = domain.headCommit?.added,
//            removed = domain.headCommit?.removed,
//            modified = domain.headCommit?.modified,
//        )
//
//    )
//}
//
